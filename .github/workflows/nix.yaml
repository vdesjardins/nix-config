---
name: Build Nix envs

on:
  pull_request:
    paths:
      - '**'
      - '!**.md'
  push:
    paths:
      - '**'
      - '!**.md'
  schedule:
    - cron: '0 0 * * 0'   # Every Sunday at midnight UTC

jobs:
  build-macos-env:
    name: Build/cache macOS Nix env
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/lb41az54kzk6j12p81br4bczary7m145/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: vdesjardins
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: If scheduled, update inputs
        if: ${{ github.event_name == 'schedule' && success() }}
        run: |
          nix flake update --recreate-lock-file
      - name: Build and switch to nix-darwin env
        run: |
          # Create /run directory
          echo -e "run\tprivate/var/run" | sudo tee -a /etc/synthetic.conf >/dev/null
          /System/Library/Filesystems/apfs.fs/Contents/Resources/apfs.util -B 2>/dev/null || true
          # Prevent conflict between Cachix installed by workflow and the one installed in the config
          nix-env --set-flag priority 1 cachix
          # Build and switch to bootstrap config
          make darwin-bootstrap
          # Build and switch to full config
          make work-mac
      - name: If scheduled, push commit with updated inputs
        if: ${{ github.event_name == 'schedule' && success() }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "build: update flake inputs"
          git push

  build-linux-env:
    name: Build/cache Linux Nix env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/lb41az54kzk6j12p81br4bczary7m145/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            substituters = https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: vdesjardins
          extraPullNames: iohk
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build and switch to home-manager env
        run: |
          # Prevent conflict between Cachix installed by workflow and the one installed in the config
          nix-env --set-flag priority 1 cachix
          # Build and switch to home-manager env
          make vincent_desjardins
