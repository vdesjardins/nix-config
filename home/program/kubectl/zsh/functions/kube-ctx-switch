#!/bin/bash
# Create a new Tmux session with dedicated kube config
function kube-ctx-switch() {
	(
		local context_name=$1
		export KUBECONFIG=~/.kube/config

		kubectl config get-contexts --no-headers -o name
		if [[ $context_name == "" ]]; then
			context_name=$(kubectl config get-contexts --no-headers -o name | fzf-tmux -p 50%,20% --border)
		fi

		if [[ $context_name == "" ]]; then
			echo "no context provided."
			return 1
		fi

		cluster=$(kubectl config view -ojson | jq ".contexts[] | select(.name == \"$context_name\") | .context.cluster" -Mr)

		# check if context is EKS
		local aws_context=""
		local aws_profile=""
		local aws_account_id=""
		aws_account_id=$(echo "$cluster" | awk -F':' '{ print $5; }')
		if [[ $aws_account_id != "" ]]; then
			if command -v aws-config-parser &>/dev/null; then
				aws_profile="$(aws-config-parser --id "$aws_account_id" | fzf-tmux -p 50%,20% --border)"
				aws_context="export AWS_PROFILE=$aws_profile"
			fi
			if [[ "$context_name" == "$cluster" ]]; then
				context_name=$(echo "$context_name" | awk -F'/' '{ print $2; }')
			fi
		fi

		# check if context is GKE
		if [[ $context_name == gke_* ]]; then
			context_name=$(echo "$context_name" | awk -F'_' '{ print $4; }')
		fi

		local context_file
		context_file=$(echo "$context_name" | tr ':' '_')
		local session_name
		session_name="âžœ "$context_file

		tmux list-session | cut -d':' -f1 | grep "$session_name" &>/dev/null
		local list_status=$?
		if [[ $list_status == 0 ]]; then
			tmux switch-client -t "$session_name"
			return
		fi

		local dir=~/.config/my-kubeconfig
		mkdir -p "$dir"
		local kubeconfig=$dir/$context_file-config
		local startup_script=$dir/$context_file-startup-script.sh
		cp ~/.kube/config "$kubeconfig"

		printf "\
set -x
#!/usr/bin/env zsh
%s
export KUBECONFIG=\"%s\"
kubectl config use-context \"%s\"
zsh" "$aws_context" "$kubeconfig" "$context_name" >"$startup_script"

		chmod +x "$startup_script"

		tmux new-session -d -s "$session_name" "$startup_script"
		tmux setenv -t "$session_name" KUBECONFIG "$kubeconfig"
		tmux setenv -t "$session_name" AWS_PROFILE "$aws_profile"
		tmux switch-client -t "$session_name"
	)
}
